{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\texport let name;\n\tlet Username = \"\";\n\tlet Password = \"\";\n\tlet loggedIn = false;\n\t\n\tconst dreamsForm = document.getElementById(\"new-entry\");\n\tconst changeForm = document.getElementById(\"edit-entry\");\t\n\tconst dreamsList = document.getElementById(\"dreams\");\n\n\tlet src = \"https://cdn.glitch.com/44c8815a-b1b4-4987-be6b-edee7bec88bc%2Fthumbnails%2FUser_Avatar_2.png?1601318518008\"\n\n\tasync function Login(e){\n\t\ttry{\n\t\t\tconst res = await fetch('/login', { \n\t\t\t\tmethod:'POST',\n    \t\t\t\tbody:JSON.stringify({uname: Username, psw: Password}),\n    \t\t\t\theaders: {\n      \t\t\t\t\t'Content-Type': 'application/json'\n    \t\t\t\t}\n\t\t\t})\n\t\t\tconst json = await res.json();\n\t\t\tif(json.newU){\n\t\t\t\twindow.alert(\"New Account Created\");\n\t\t\t\tpopulateList();\n\t\t\t\tloggedIn = true;\n\t\t\t}\n\t\t\telse if(json.login){\n\t\t\t\twindow.alert(\"Login Successful\");\n\t\t\t\tpopulateList();\n\t\t\t\tloggedIn = true;\n\t\t\t}\n\t\t\telse{\n\t\t\t\twindow.alert(\"Wrong Password\");\n\t\t\t}\n\t\t}\n\t\tcatch( error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tasync function Add(e){\n\t\tlet newDream = dreamsForm.elements.dream.value;\n\n\t\tconst res = await fetch('/add', {\n\t\t\tmethod:'POST',\n\t\t\tbody:JSON.stringify({dream:newDream}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}\n   \t\t})\n\t\tconst json = await res.json();\n\t\tpopulateList();\n\t\t\n\t\tdreamsForm.reset();\n\t\tdreamsForm.elements.dream.focus();\n\t}\n\n\tasync function Edit(e){\n\t\tlet old = changeForm.elements.current.value;\n\t\tlet Updated = changeForm.elements.new.value;\n\n\t\tconst res = await fetch('/edit', {\n\t\t\tmethod: 'POST',\n\t\t\tbody:JSON.stringify({old: old, new: Updated}),\n\t\t\theaders: {\n\t\t\t\t'Content-Type' : 'application/json'\n\t\t\t}\n\t\t})\n\t\tconst json = await res.json();\n\t\tpopulateList();\n\n\t\tchangeForm.reset();\n\t}\n\t\n\tfunction appendNewDream(dream, id ) {\n  const newListItem = document.createElement(\"li\");\n  newListItem.innerText = dream;\n  dreamsList.appendChild(newListItem);\n  \n  newListItem.onclick = async function(){\n    \tconst res = await fetch('/delete', {\n   \t\t\t method:'POST',\n    \t\t\tbody:JSON.stringify({ id }),\n    \t\t\theaders: {\n      \t\t\t'Content-Type': 'application/json'\n   \t\t\t }\n    \t})\n\tconst json = await res.json();\n    \tnewListItem.remove();\n}\n}\n\n\n\tasync function populateList(){\n\t\tdreamsList.innertHTML = \"\";\n\t\tconst res = await fetch('/pop', {\n\t\t\tmethod:'GET',\n\t\t\theaders: {\n\t\t\t\t'Content-Type' : 'application/json'\n\t\t\t}\n\t\t})\n\t\tconst json = await res.json()\n\t\tfor(var i=0; i< json.length; i++){\n\t\t\tappendNewDream(json[i].dream,json[i]._id)\n\t\t}\n\t}\n</script>\n\n<main>\n\t<p>\n\t<div>\n\t\t{#if loggedIn}\n\t\t<div style = \"text-align: center;\">\n      \t\t\t<form id = \"new-entry\">\n        \t\t\t<label>\n          \t\t\t\tNew Enemy\n         \t \t\t\t<input name=\"dream\" type=\"text\" maxlength=\"100\" required placeholder=\"New Entry\">\n        \t\t\t</label>\n        \t\t\t<button on:click={Add}>Add To List</button><br>\n        \t\t</form>\n        \t\t<form id=\"edit-entry\">\n        \t\t\t<label>\n          \t\t\t\tEdit List\n            \t\t\t\t<input name=\"current\" type=\"text\" maxlength=\"100\" required placeholder=\"Old Name\">\n            \t\t\t\t<input name=\"new\" type=\"text\" maxlength=\"100\" required placeholder=\"New Name\">\n            \t\t\t\t<button on:click={Edit}>\n              \t\t\t\tChange in List\n          \t\t\t\t</button>\n        \t\t\t</label>\n        \t\t</form>\n      \t\t\t<p>\n        \t\t\tClick on name To Delete\n      \t\t\t</p>\n      \n      <section class=\"dreams\">\n        <ul id=\"dreams\" style = \"text-align: center;list-style-type: none\">\n          <em>loading enemies&hellip;</em>\n        </ul>\n      </section>\n        </div>\n\t\t{:else}\n\t\t<img {src} alt = \"person icon in black circle\"> <br>\n  \t\t<input type=\"text\" placeholder=\"Username\" bind:value={Username} /><br>\n  \t\t<input type=\"password\" placeholder=\"Password\" bind:value={Password} /><br>\n  \t\t<button on:click={Login}>Login</button>\n\t{/if}\n\t</div>\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>"
  ],
  "names": [],
  "mappings": "AAuJC,IAAI,eAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AACf,CAAC,AASD,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,eAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC"
}